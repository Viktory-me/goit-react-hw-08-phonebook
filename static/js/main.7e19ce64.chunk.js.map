{"version":3,"sources":["services/contactApi.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSlices.js","redux/store.js","Components/Section/Section.styled.jsx","Components/Section/Section.jsx","Components/Container/Container.syled.jsx","Components/Container/Container.jsx","redux/contacts/contactsSelector.js","Components/Form/Form.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","App.js","index.js"],"names":["fetchContacts","a","axios","get","data","addContact","newContact","post","deleteContact","contactId","delete","defaults","baseURL","createAsyncThunk","contactApi","contacts","contact","contactsSlice","createSlice","name","initialState","items","extraReducers","fulfilled","_","payload","state","filter","id","filterSlice","reducers","setFilter","actions","errorSlice","pending","rejected","action","error","message","isLoadingSlice","reducer","isLoading","combineReducers","store","configureStore","contactsReducer","devTools","process","Sections","styled","section","Section","children","Contain","div","getLoading","getFiltred","getFiltredContacts","createSelector","normalizeFilter","toLowerCase","number","includes","MyForm","dispatch","useDispatch","useSelector","nameId","shortid","generate","phoneId","initialValues","validate","values","errors","test","onSubmit","resetForm","some","alert","autoComplete","htmlFor","color","type","placeholder","FilterContainer","Input","input","FilterTitle","p","Filter","value","onChange","e","target","ListContact","ul","ItemContact","li","Paragraph","Button","button","Load","ContactList","loading","useEffect","map","width","viewBox","onClick","onDeleteContact","App","loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e19ce64.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = `https://611e98a69771bf001785c556.mockapi.io/`;\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n\r\nexport async function addContact(newContact) {\r\n  const { data } = await axios.post(`/contacts`, newContact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(contactId) {\r\n  const { data } = await axios.delete(`/contacts/${contactId}`);\r\n  return data;\r\n}\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as contactApi from \"services/contactApi\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    const contacts = await contactApi.fetchContacts();\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async (newContact) => {\r\n    const contact = await contactApi.addContact(newContact);\r\n    return contact;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (contactId) => {\r\n    await contactApi.deleteContact(contactId);\r\n    return contactId;\r\n  }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { fetchContacts, addContact, deleteContact } from \"./contactsOperations\";\r\n\r\nconst contactsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState: {\r\n    items: [],\r\n  },\r\n\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (_, { payload }) => ({ items: payload }),\r\n\r\n    [addContact.fulfilled]: (state, { payload }) => ({\r\n      items: [payload, ...state.items],\r\n    }),\r\n\r\n    [deleteContact.fulfilled]: (state, { payload }) => ({\r\n      items: state.items.filter((contact) => contact.id !== payload),\r\n    }),\r\n  },\r\n});\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    setFilter: (_, { payload }) => payload,\r\n  },\r\n});\r\nexport const { setFilter } = filterSlice.actions;\r\n\r\nconst errorSlice = createSlice({\r\n  name: \"error\",\r\n  initialState: [],\r\n  extraReducers: {\r\n    [fetchContacts.pending]: () => null,\r\n    [fetchContacts.rejected]: (_, action) => action.error.message,\r\n\r\n    [addContact.pending]: () => null,\r\n    [addContact.rejected]: (_, action) => action.error.message,\r\n\r\n    [deleteContact.pending]: () => null,\r\n    [deleteContact.rejected]: (_, action) => action.error.message,\r\n  },\r\n});\r\n\r\nconst isLoadingSlice = createSlice({\r\n  name: \"isLoading\",\r\n  initialState: false,\r\n  extraReducers: {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n  },\r\n});\r\n\r\nconst contacts = contactsSlice.reducer;\r\nconst filter = filterSlice.reducer;\r\nconst error = errorSlice.reducer;\r\nconst isLoading = isLoadingSlice.reducer;\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  error,\r\n  isLoading,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport contactsReducer from \"./contacts/contactsSlices\";\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport { store };\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Sections = styled.section`\r\n  background-color: #44424232;\r\n  margin-top: 20px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  padding-top: 10px;\r\n  padding-bottom: 15px;\r\n  &:not(:first-of-type) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Sections } from \"./Section.styled\";\r\n\r\nconst Section = ({ children }) => {\r\n  return <Sections>{children}</Sections>;\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Contain = styled.div`\r\n  max-width: 320px;\r\n  border: thick double #c21111e2;\r\n  border-radius: 20px;\r\n  background-color: #ffffffba;\r\n  margin: 0 auto;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Contain } from \"./Container.syled\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <Contain>{children}</Contain>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Contain;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getError = (state) => state.error;\r\n\r\nexport const getLoading = (state) => state.isLoading;\r\n\r\nexport const getFiltred = (state) => state.filter;\r\n\r\nexport const getContactsList = (state) => state.contacts.items;\r\n\r\nexport const getFiltredContacts = createSelector(\r\n  [getFiltred, getContactsList],\r\n  (filter, contacts) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(\r\n      ({ name, number }) =>\r\n        name.toLowerCase().includes(normalizeFilter) ||\r\n        number.includes(normalizeFilter)\r\n    );\r\n  }\r\n);\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { RiContactsLine } from \"react-icons/ri\";\r\nimport { BsPhone } from \"react-icons/bs\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport shortid from \"shortid\";\r\nimport \"./Form.module.css\";\r\nimport { getFiltredContacts } from \"../../redux/contacts/contactsSelector\";\r\nimport { addContact } from \"../../redux/contacts/contactsOperations\";\r\n\r\nfunction MyForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getFiltredContacts);\r\n  const handleSubmit = (newContact) => {\r\n    if (contacts.some(({ name }) => name === newContact.name)) {\r\n      alert(`${newContact.name} already in phonebook`);\r\n      return;\r\n    }\r\n    dispatch(addContact(newContact));\r\n  };\r\n\r\n  let nameId = shortid.generate();\r\n  let phoneId = shortid.generate();\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: \"\", number: \"\" }}\r\n      validate={(values) => {\r\n        const errors = {};\r\n        if (!values.name) {\r\n          errors.name = \"Enter name\";\r\n        } else if (!values.number) {\r\n          errors.number = \"Enter number\";\r\n        } else if (\r\n          !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\r\n            values.number\r\n          )\r\n        ) {\r\n          errors.number =\r\n            \"The number can only include numbers, spaces, dashes, brackets and start with +\";\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { resetForm }) => {\r\n        const { name, number } = values;\r\n        handleSubmit({ name, number });\r\n        resetForm();\r\n      }}\r\n    >\r\n      <Form autoComplete='off'>\r\n        <label htmlFor={`id-${nameId}`}>\r\n          <RiContactsLine color='#c21111e2'></RiContactsLine> Name\r\n        </label>\r\n        <Field\r\n          type='text'\r\n          name='name'\r\n          id={`id-${nameId}`}\r\n          placeholder='enter name'\r\n        />\r\n        <ErrorMessage name='name' />\r\n\r\n        <label htmlFor={`id-${phoneId}`}>\r\n          <BsPhone color='#c21111e2'></BsPhone>Number\r\n        </label>\r\n        <Field\r\n          type='tel'\r\n          name='number'\r\n          id={`id-${phoneId}`}\r\n          placeholder='+111-111-11'\r\n        />\r\n        <ErrorMessage name='number' />\r\n\r\n        <button type='submit'>Add contact</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default MyForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FilterContainer = styled.div``;\r\nexport const Input = styled.input``;\r\nexport const FilterTitle = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  margin-bottom: 5px;\r\n  font-weight: 500;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getFiltred } from \"../../redux/contacts/contactsSelector\";\r\nimport { RiPhoneFindLine } from \"react-icons/ri\";\r\nimport { FilterContainer, Input, FilterTitle } from \"./Filter.styled\";\r\nimport { setFilter } from \"redux/contacts/contactsSlices\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFiltred);\r\n\r\n  return (\r\n    <FilterContainer>\r\n      <FilterTitle>\r\n        <RiPhoneFindLine color='#c21111e2'></RiPhoneFindLine>\r\n        Find contacts by name\r\n      </FilterTitle>\r\n      <Input\r\n        type='text'\r\n        value={filter}\r\n        onChange={(e) => dispatch(setFilter(e.target.value))}\r\n        placeholder='enter name'\r\n      />\r\n    </FilterContainer>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ListContact = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  list-style: none;\r\n  padding-inline-start: 5px;\r\n  margin: 0 auto;\r\n  margin-top: 5px;\r\n`;\r\nexport const ItemContact = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 5px 0 5px 0;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n`;\r\nexport const Button = styled.button`\r\n  margin-right: 0 auto;\r\n`;\r\nexport const Contain = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 120px;\r\n`;\r\nexport const Load = styled.div`\r\n  text-align: center;\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { RiContactsLine, RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { BsPhone } from \"react-icons/bs\";\r\nimport {\r\n  ListContact,\r\n  ItemContact,\r\n  Paragraph,\r\n  Button,\r\n  Contain,\r\n  Load,\r\n} from \"./ContactList.styled\";\r\nimport {\r\n  getFiltredContacts,\r\n  getLoading,\r\n} from \"../../redux/contacts/contactsSelector\";\r\nimport {\r\n  deleteContact,\r\n  fetchContacts,\r\n} from \"../../redux/contacts/contactsOperations\";\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getFiltredContacts);\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(getLoading);\r\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ListContact>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ItemContact key={id}>\r\n          <Contain>\r\n            <RiContactsLine color='#c21111e2'></RiContactsLine>\r\n            <Paragraph>{name}</Paragraph>\r\n          </Contain>\r\n          <Contain>\r\n            <BsPhone\r\n              width='16px'\r\n              viewBox='0 0 16 16'\r\n              color='#c21111e2'\r\n            ></BsPhone>\r\n            <Paragraph>{number}</Paragraph>{\" \"}\r\n          </Contain>\r\n\r\n          <Button onClick={() => onDeleteContact(id)}>\r\n            <RiDeleteBinLine></RiDeleteBinLine>\r\n          </Button>\r\n        </ItemContact>\r\n      ))}\r\n      {loading && <Load>...Wait load...</Load>}\r\n    </ListContact>\r\n  );\r\n}\r\nexport default ContactList;\r\n","import { useSelector } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport Section from \"./Components/Section/Section\";\r\nimport Container from \"./Components/Container/Container\";\r\nimport MyForm from \"./Components/Form/Form\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\nimport { getLoading } from \"./redux/contacts/contactsSelector\";\r\nfunction App() {\r\n  const loader = useSelector(getLoading);\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <MyForm />\r\n      </Section>\r\n      <Section>\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList></ContactList>\r\n      </Section>\r\n      {loader && <p>...Loading...</p>}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"./redux/store\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}